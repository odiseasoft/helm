apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "lamp.fullname" . }}-nginx-config
  labels:
    tier: backend
data:
  config : |
    limit_req_zone $request_uri zone=credentials_uri:10m rate=60r/m;
    limit_conn_zone $binary_remote_addr zone=addr:10m;
    server {
      client_max_body_size 0;
      
      limit_conn addr 10;
    
      listen 80;
      server_name {{ template "lamp.domain" . }};      
      
      add_header X-Frame-Options "SAMEORIGIN";
      add_header X-XSS-Protection "1; mode=block";
      add_header X-Content-Type-Options "nosniff";
      
      index index.php index.html;
      error_log  /var/log/nginx/error.log;
      access_log /var/log/nginx/access.log;
      
      root {{ .Values.repo.root }};
      
      charset utf-8;
      
      location / {
          limit_req zone=credentials_uri burst=60 nodelay;
          try_files $uri $uri/ /index.php?$query_string;
          set $redirect_url $uri;
      }
      location = /favicon.ico { access_log off; log_not_found off; }
      location = /robots.txt  { access_log off; log_not_found off; }
      
      error_page 404 /index.php;
      
      location ~ .php$ {
          try_files $uri =404;
          fastcgi_split_path_info ^(.+.php)(/.+)$;
          fastcgi_pass 127.0.0.1:9000;
          fastcgi_index index.php;
          include fastcgi_params;
          fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
          fastcgi_param PATH_INFO $fastcgi_path_info;
          fastcgi_param REDIRECT_URL $redirect_url;
      }
      
      location ~ /\.(?!well-known).* {
          deny all;
      }
    }
---

apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "lamp.fullname" . }}-php-config
  labels:
    tier: backend
data:
  config : |
    upload_max_filesize = 100M
    post_max_size = 600M
---

{{- if .Values.persistence.enabled}}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ template "lamp.fullname" . }}-pv-claim
  labels:
    app: {{ template "lamp.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
    helm.sh/resource-policy: keep
spec:
  accessModes:
    - {{ .Values.persistence.accessMode | quote }}
  resources:
    requests:
      storage: {{ .Values.persistence.size | quote }}
{{- end}}     
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "lamp.fullname" . }}
  labels:
    app: {{ template "lamp.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "lamp.fullname" . }}
  template:
    metadata:
      labels:
        app: {{ template "lamp.fullname" . }}
    spec:
      volumes:
        # Create the shared files volume to be used in both pods
        - name: shared-files
          emptyDir: {}
        # Repo files
        - name: nfs-volume
          nfs: 
            # URL for the NFS server
            server: {{ .Values.repo.server }}
            path: {{ .Values.repo.path }}
        # Persistent Data
        {{- if .Values.persistence.enabled}}
        - name: data
          persistentVolumeClaim:
            claimName: {{ template "lamp.fullname" . }}-pv-claim
        {{- end}}
        # Add the ConfigMap we declared above as a volume for the pod
        - name: config
          configMap:
            name: {{ template "lamp.fullname" . }}-nginx-config
            items:
            - key: config
              path: site.conf
        # Add the ConfigMap we declared above as a volume for the pod
        - name: configphp
          configMap:
            name: {{ template "lamp.fullname" . }}-php-config
            items:
            - key: config
              path: postsize.ini
      containers:
        - image: "{{ .Values.php.repository }}:{{ .Values.php.tag }}"
          name: php-app
          imagePullPolicy: {{ .Values.php.pullPolicy }}
          env:
          - name: APP_ENV
            value: "production"
          - name: APP_DEBUG
            value: "false"
          - name: APP_URL
            value: "{{- if .Values.ingress.ssl -}}https{{- else -}}http{{- end -}}://{{ template "lamp.domain" . }}"
          - name: DB_HOST
            value: "{{ .Values.env.mysqlhost }}"
          - name: DB_PORT
            value: "{{ .Values.env.mysqlport }}"
          - name: DB_DATABASE
            value: "{{ .Values.env.mysqldbnm }}"
          - name: DB_USERNAME
            value: "{{ .Values.env.mysqluser }}"
          - name: DB_PASSWORD
            value: "{{ .Values.env.mysqlpass }}"
          resources:
            requests:
              memory: {{ .Values.php.requests.memory }}
              cpu: {{ .Values.php.requests.cpu }}
            limits:
              memory: {{ .Values.php.limits.memory }}
              cpu: {{ .Values.php.limits.cpu }}
          volumeMounts:
            - name: shared-files
              mountPath: /var/www/html
            {{- if .Values.persistence.enabled}}
            - name: data
              mountPath: {{ .Values.persistence.mountPath }}
            {{- end}}
            - name: configphp
              mountPath: /usr/local/etc/php/conf.d
          # permissions fix at /var/www/html.
          lifecycle:
            postStart:
              exec:
                command: ["/bin/sh", "-c", "chmod 777 -R /var/www/html {{ if .Values.repo.laravel}} && rm -rf /var/www/html/public/storage && php /var/www/html/artisan storage:link {{end}} "]

        - image: "{{ .Values.nginx.repository }}:{{ .Values.nginx.tag }}"
          name: nginx
          imagePullPolicy: {{ .Values.nginx.pullPolicy }}
          resources:
            requests:
              memory: {{ .Values.nginx.requests.memory }}
              cpu: {{ .Values.nginx.requests.cpu }}
            limits:
              memory: {{ .Values.nginx.limits.memory }}
              cpu: {{ .Values.nginx.limits.cpu }}
          volumeMounts:
            - name: shared-files
              mountPath: /var/www/html
            {{- if .Values.persistence.enabled}}
            - name: data
              mountPath: {{ .Values.persistence.mountPath }}
            {{- end}}
            - name: config
              mountPath: /etc/nginx/conf.d
      initContainers:
        - name: install
          image: busybox
          volumeMounts:
            - name: shared-files
              mountPath: /var/www/html
            {{- if .Values.persistence.enabled}}
            - name: data
              mountPath: {{ .Values.persistence.mountPath }}
            {{- end}}
            - name: nfs-volume
              mountPath: /mnt/nfs
          command: ["/bin/sh","-c"]          
          args: ["unzip -o /mnt/nfs/{{ .Values.repo.zip }} -d /var/www/html"]
---

apiVersion: v1
kind: Service
metadata:
  name: {{ template "lamp.fullname" . }}
  labels:
    app: {{ template "lamp.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
spec:
  type: ClusterIP
  selector:
    app: {{ template "lamp.fullname" . }}
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80

---

{{- if .Values.ingress.enabled }}
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: {{ template "lamp.fullname" . }}-app
  annotations:
    kubernetes.io/ingress.class: "nginx"
    {{- if .Values.ingress.ssl }}
    cert-manager.io/cluster-issuer: "letsencrypt-cluster-issuer"
    kubernetes.io/tls-acme: "true"
    {{- end }}
    {{- if .Values.ingress.htpasswdString }}
    ingress.kubernetes.io/auth-type: basic
    ingress.kubernetes.io/auth-secret: {{ template "lamp.fullname" . }}
    ingress.kubernetes.io/auth-realm: "Authenticate"
    {{- end }}
    {{- if .Values.ingress.subdomainWWW }}
    ingress.kubernetes.io/configuration-snippet: |
      rewrite ^(.*)$ $scheme://www.{{ template "lamp.domain" . }}$1;
    {{- end }}
{{ toYaml .Values.ingress.annotations | indent 4 }}
spec:
  {{- if .Values.ingress.ssl }}
  tls:
  - secretName: {{ template "lamp.fullname" . }}-tls-app
    hosts:
    - {{ template "lamp.domain" . }}
  {{- end }}
  rules:
  - host: {{ template "lamp.domain" . }}
    http:
      paths:
      - path: /
        backend:
          serviceName: {{ template "lamp.fullname" . }}
          servicePort: {{ .Values.service.HTTPPort }}
{{- end }}
